<?php
/**
 * 商品属性
 */
namespace app\goods\controller;

class GoodsProp extends Base
{
    //获取所有标签列表
    public function getPropAll(){
        if( !$checkData = $this->validate->getPropAll(input('get.')) ){
            return errorJson(0204301, $this->validate->getError());
        }
        $list = $this->model->getPropAll($checkData['page'],$checkData['limit'],true);
        return successJson($list['list'],'',$list['count']);
    }

    //获取属性类型信息
    public function getPropInfo(){
        if( !$checkData = $this->validate->getPropInfo(input('post.')) ){
            return errorJson(020401, $this->validate->getError());
        }
        $info = $this->model->getPropInfo($checkData['id']);
        if( empty($info) ){
            return errorJson(020402, '属性类型不存在');
        }
        return successJson($info);
    }

    public function deleted(){
        if( !$checkData = $this->validate->getPropInfo(input('post.')) ){
            return errorJson(020401, $this->validate->getError());
        }
        //检查是否存在
        $info = $this->model->getPropInfo($checkData['id']);
        if( empty($info) ){
            return errorJson(020402, '属性类型不存在');
        }
        //检查是否存在商品绑定
        $goodsPropValModel = new \app\goods\model\GoodsPropVal();
        $returnList = $goodsPropValModel->getPropValGoods($checkData['id'],'p');
        if( !empty($returnList) ){
            return errorJson(020405, '存在商品绑定不允许删除');
        }
        //执行删除
        $updateData['is_deleted'] = 1;
        $this->model->where('id',$checkData['id'])->update($updateData);
        return successJson(true,'删除成功');
    }

}
